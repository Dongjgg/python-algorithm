'''
    汉诺塔问题：
    三根杆子，A、B、C，A杆上有n个盘子，要求将A杆上的所有盘子移到C杆上，
    一次只能移动一个盘子，并且在移动的过程中不能将较大的盘子压在较小的盘子上。
    问：最少需要多少步可以完成？

    思路：
       1. 将A杆上的n-1个盘子经过C移动到B
       2. 将A杆上的最后一个盘子从A移动到C
       3. 将B杆上的n-1个盘子经过A移动到C
'''


def hanoi(n, A, B, C):  # 格式： 从什么 经过什么 到什么
    if n > 0:
        hanoi(n-1, A, C, B)  # 将A杆上的n-1个盘子经过C移动到B   格式： 从什么 经过什么 到什么
        print(f"{n}盘子从{A}到{C}")
        hanoi(n-1, B, A, C)  # 将B杆上的n-1个盘子经过A移动到C   格式： 从什么 经过什么 到什么

if __name__ == '__main__':
    hanoi(3, 'A', 'B', 'C')  # 3个盘子，从A移动到C

